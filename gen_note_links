#!/usr/bin/env bash

# Reads markdown files from "dir" and parses out any files with a front matter.
# A series of href links is constructed and echoed out. The links are in the
# form of:
#
# ${date}\n ${link with title}\n
#
# Date must be in the format: YYYY MMM DD such as 2026 Mar 24.
# This allows this script to reliably sort the note references by date.

dir=$1
notes=""

die() {
      echo "$1"
      exit 2
}

if [[ -z "$dir" ]]; then
  die "Please specify a directory!"
fi

trim() {
  read -rd '' $1 <<<"${!1}"
}

parse_file() {
  local file=$1

  local start=false
  local title=""
  local date=""
  while read -r line; do
    if [[ $start == false ]]; then
      if [[ $line == "---" ]]; then
	start=true
	continue
      else
	die "No front matter found at the start for ${file}! It might be missing a '---'."
      fi
    fi

    if [[ $line == title:* ]]; then
      title="${line#"title:"}"
      trim title
    elif [[ $line == date:* ]]; then
      date="${line#"date:"}"
      trim date
    elif [[ $line = "---" ]]; then
      if [[ -n $title && -n $date ]]; then
	year="${date:0:4}"
	notes["$year"]+="${date};${file/%md/html};${title}"$'\n'
      else
	die "Could not find name and date in front matter of ${file}!"
      fi
    fi
  done < "$file"
}

for file in "${dir}"/*.md; do
  if [ -e "$file" ]; then
    parse_file "$file"
  fi
done

# Split on "<" which we created using the <br>, since the date is first we do
# not have to worry about the title having <'s and causing issues.
sort -r -t "<" -k 1.1,1.4nr -k 1.6,1.8Mr -k 1.10,1.11nr <<< "$notes"
